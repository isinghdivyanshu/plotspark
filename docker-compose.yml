version: "3.8"

services:
    db:
        image: postgres:15-alpine
        container_name: plotspark-db
        restart: unless-stopped
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - plotspark-network
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: plotspark-backend
        restart: unless-stopped
        ports:
            - "8080:8080"
        environment:
            - PORT=${PORT}
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
            - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
            - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
            - APP_JWT_SECRET=${APP_JWT_SECRET}
            - APP_JWT_EXPIRATION_MILLISECONDS=${APP_JWT_EXPIRATION_MILLISECONDS}
            - SPRING_MAIL_HOST=${SPRING_MAIL_HOST}
            - SPRING_MAIL_PORT=${SPRING_MAIL_PORT}
            - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
            - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
            - ENVIRONMENT=${ENVIRONMENT}
        depends_on:
            db:
                condition: service_healthy
        networks:
            - plotspark-network

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        container_name: plotspark-frontend
        restart: unless-stopped
        ports:
            - "3000:3000"
        depends_on:
            - backend
        networks:
            - plotspark-network

networks:
    plotspark-network:
        driver: bridge

volumes:
    postgres_data:
